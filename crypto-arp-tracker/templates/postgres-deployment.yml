apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
  namespace: {{ .Values.environment }}
  labels:
    app: {{ include "crypto-arp-tracker.name" . }}-db-{{ .Values.environment }}
spec:
  replicas: {{ .Values.postgres.replicas }}
  selector:
    matchLabels:
      app: {{ include "crypto-arp-tracker.name" . }}-db-{{ .Values.environment }}
  template:
    metadata:
      labels:
        app: {{ include "crypto-arp-tracker.name" . }}-db-{{ .Values.environment }}
    spec:
      initContainers:
        - name: clean-pv
          image: busybox
          command:
            - sh
            - -c
            - "rm -rf /var/lib/postgresql/data/lost+found 2>/dev/null"
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: db-data
      containers:
        - name: postgres
          image: {{ .Values.postgres.image }}
          env:
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.secretsName }}
                  key: PG_DB
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.secretsName }}
                  key: PG_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.secretsName }}
                  key: PG_PASSWORD
          ports:
            - containerPort: 5432
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: db-data
          resources:
            requests:
              memory: "256Mi"
              cpu: "500m"
            limits:
              memory: "512Mi"
              cpu: "1"
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - "$(POSTGRES_USER)"
                - -d
                - "$POSTGRES_DB"
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - "$(POSTGRES_USER)"
                - -d
                - "$POSTGRES_DB"
            initialDelaySeconds: 15
            failureThreshold: 30
            periodSeconds: 5
      volumes:
        - name: db-data
          persistentVolumeClaim:
            claimName: {{ include "crypto-arp-tracker.name" . }}-db-pvc-{{ .Values.environment }}
