apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.service.visualizer.name }}
  namespace: {{ .Values.environment }}
  labels:
    app: {{ include "crypto-arp-tracker.name" . }}-visualizer-{{ .Values.environment }}
spec:
  replicas: {{ .Values.visualizer.replicas }}
  selector:
    matchLabels:
      app: {{ include "crypto-arp-tracker.name" . }}-visualizer-{{ .Values.environment }}
  template:
    metadata:
      labels:
        app: {{ include "crypto-arp-tracker.name" . }}-visualizer-{{ .Values.environment }}
    spec:
      containers:
        - name: visualizer-app
          image: "{{ .Values.visualizer.image.repository }}:{{ .Values.visualizer.image.tag }}"
          env:
            - name: PG_DB
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.secretsName }}
                  key: PG_DB
            - name: PG_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.secretsName }}
                  key: PG_USER
            - name: PG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.secretsName }}
                  key: PG_PASSWORD
            - name: PYTHONPATH
              value: "."
          resources:
            requests:
              memory: "64Mi"
              cpu: "500m"
            limits:
              memory: "128Mi"
              cpu: "1"
          startupProbe:
            httpGet:
              path: "/health"
              port: 8000
            initialDelaySeconds: 10
            failureThreshold: 30
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: "/health"
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: "/health"
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 20
