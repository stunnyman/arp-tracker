name: CI/CD Pipeline

on:
  push:
    paths:
      - 'fetcher/**'
      - 'visualizer/**'
      - '.github/**'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Set env variables
        run: |
          echo "PG_DB=${{ secrets.TEST_PG_DB }}" >> $GITHUB_ENV
          echo "PG_USER=${{ secrets.TEST_PG_USER }}" >> $GITHUB_ENV
          echo "PG_PASSWORD=${{ secrets.TEST_PG_PASSWORD }}" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          pip install -r tests/requirements.txt

      - name: Run tests
        run: |
          pytest tests/

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2 #needs to find recent changes

        # to create a new image in case of changes code in service
      - name: Is changed
        run: |
          git fetch origin main
          changes=$(git diff --name-only HEAD~1 HEAD)
          echo "Changes: $changes"
          
          if echo "$changes" | grep -q '^fetcher/'; then
            echo "FETCHER_CHANGED=true" >> $GITHUB_ENV
          fi
          if echo "$changes" | grep -q '^visualizer/'; then
            echo "VISUALIZER_CHANGED=true" >> $GITHUB_ENV
          fi

      - name: Read version file [Fetcher]
        if: env.FETCHER_CHANGED == 'true'
        run: echo "FETCHER_VERSION=$(cat fetcher/VERSION)" >> $GITHUB_ENV

      - name: Read version file [Visualizer]
        if: env.VISUALIZER_CHANGED == 'true'
        run: echo "VISUALIZER_VERSION=$(cat visualizer/VERSION)" >> $GITHUB_ENV

      - name: Login to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build, Push the image [Fetcher]
        if: env.FETCHER_CHANGED == 'true'
        run: |
          docker build -t "${{ secrets.DOCKER_USERNAME }}"/arp-fetcher:latest ./fetcher
          docker tag "${{ secrets.DOCKER_USERNAME }}"/arp-fetcher:latest "${{ secrets.DOCKER_USERNAME }}"/arp-fetcher:${{ env.FETCHER_VERSION }}
          docker push "${{ secrets.DOCKER_USERNAME }}"/arp-fetcher:latest
          docker push "${{ secrets.DOCKER_USERNAME }}"/arp-fetcher:${{ env.FETCHER_VERSION }}

      - name: Build, Push the image [Visualizer]
        if: env.VISUALIZER_CHANGED == 'true'
        run: |
          docker build -t "${{ secrets.DOCKER_USERNAME }}"/arp-visualizer:latest ./visualizer
          docker tag "${{ secrets.DOCKER_USERNAME }}"/arp-visualizer:latest "${{ secrets.DOCKER_USERNAME }}"/arp-visualizer:${{ env.VISUALIZER_VERSION }}
          docker push "${{ secrets.DOCKER_USERNAME }}"/arp-visualizer:latest
          docker push "${{ secrets.DOCKER_USERNAME }}"/arp-visualizer:${{ env.VISUALIZER_VERSION }}
