name: CI Pipeline

on:
  pull_request:
    types:
      - opened
      - synchronize
    branches:
      - develop
      - main
    paths:
      - 'fetcher/**'
      - 'visualizer/**'
      - 'tests/**'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Set env variables
        run: |
          echo "PG_DB=${{ secrets.TEST_PG_DB }}" >> $GITHUB_ENV
          echo "PG_USER=${{ secrets.TEST_PG_USER }}" >> $GITHUB_ENV
          echo "PG_PASSWORD=${{ secrets.TEST_PG_PASSWORD }}" >> $GITHUB_ENV

      - name: Install dependencies
        run: make requirements PATH="tests/requirements.txt"

#       to create coverage file for each module
      - name: Run tests
        run: |
          coverage run --source=fetcher --data-file=.coverage_fetcher -m pytest tests/fetcher
          coverage run --source=visualizer --data-file=.coverage_visualizer -m pytest tests/visualizer

      - name: Combine coverage reports
        run: |
          coverage combine .coverage_fetcher .coverage_visualizer
          coverage xml -o coverage.xml

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml

  sonarcloud:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download coverage report
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
          path: .

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=${{ vars.SONAR_PROJECT_KEY }}
            -Dsonar.organization=${{ vars.SONAR_ORG }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}